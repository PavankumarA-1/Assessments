# -*- coding: utf-8 -*-
"""pda_final_anamoly.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lQFrZFXk8z2v-6bJBntq86iYPuznoWv2
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler,LabelEncoder

from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import IsolationForest

df=pd.read_csv('https://raw.githubusercontent.com/Deepsphere-AI/LVA-Batch5-Assessment/main/anomaly_train.csv')

df.info()

df.head()

df.describe()

#transaction id is unique so we can remove
drop_df=df.drop(labels=['TransactionID'],axis=1)
drop_df.info()

drop_df.duplicated().sum()

drop_df.isnull().sum()

num_col=[x for x in df.select_dtypes(include=['float64','int64']).columns]
print(num_col)
print('-------')
cat_col=[x for x in df.select_dtypes(include='object').columns]
print(cat_col)

#eda
for n in num_col:
  plt.figure(figsize=(10,5))
  sns.histplot(df[n])
  plt.xlabel(n)
  plt.ylabel('frequency')
  plt.title(f'histogram of {n}')
  plt.show()

for c in cat_col:
  plt.figure(figsize=(10,5))
  df[c].value_counts().plot(kind='bar')
  plt.xlabel(n)
  plt.ylabel('frequency')
  plt.title(f'bar of {c}')
  plt.show()

#bivarient
for i in range(len(num_col)):
  for j in range(i+1,len(num_col)):
    plt.figure(figsize=(10,5))
    sns.scatterplot(data=df,x=num_col[i],y=num_col[j])
    plt.xlabel(num_col[i])
    plt.ylabel(num_col[j])
    plt.title(f'sactter plot of {num_col[i]} and {num_col[j]}')
    plt.show()

#multivarient analysis analysis
corr_mat=df[num_col].corr()
print(corr_mat)
plt.figure(figsize=(10,5))
sns.heatmap(corr_mat,annot=True,cmap='coolwarm')
plt.title('heat map of corelation matrix')
plt.show()

l=LabelEncoder()
drop_df['Type']=l.fit_transform(drop_df['Type'])
drop_df['Location']=l.fit_transform(drop_df['Location'])
drop_df.info()

drop_df.head()

#isolation forest
model = IsolationForest(random_state=42,contamination=0.05)
model.fit(drop_df)

outlier_preds = model.predict(drop_df)
drop_df['label']=outlier_preds
outlier_preds

drop_df['label'].value_counts()

#there are 50 anamoly points